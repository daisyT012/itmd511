{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule SelectEventPlugin\n */\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar EventPluginHub = require(\"./EventPluginHub\");\n\nvar EventPropagators = require(\"./EventPropagators\");\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar ReactInputSelection = require(\"./ReactInputSelection\");\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar getActiveElement = require(\"./getActiveElement\");\n\nvar isTextInputElement = require(\"./isTextInputElement\");\n\nvar keyOf = require(\"./keyOf\");\n\nvar shallowEqual = require(\"./shallowEqual\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({\n        onSelect: null\n      }),\n      captured: keyOf({\n        onSelectCapture: null\n      })\n    }\n  }\n};\nvar useSelectionChange = false;\n\nif (ExecutionEnvironment.canUseDOM) {\n  useSelectionChange = 'onselectionchange' in document;\n}\n\nvar activeElement = null;\nvar activeElementID = null;\nvar activeNativeEvent = null;\nvar lastSelection = null;\nvar mouseDown = false;\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @param {object}\n */\n\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  } else {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  }\n}\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\n\n\nfunction constructSelectEvent(nativeEvent) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior).\n  if (mouseDown || activeElement != getActiveElement()) {\n    return;\n  } // Only fire when selection has actually changed.\n\n\n  var currentSelection = getSelection(activeElement);\n\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent);\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n    return syntheticEvent;\n  }\n}\n/**\n * Handle deferred event. And manually dispatch synthetic events.\n */\n\n\nfunction dispatchDeferredSelectEvent() {\n  if (!activeNativeEvent) {\n    return;\n  }\n\n  var syntheticEvent = constructSelectEvent(activeNativeEvent);\n  activeNativeEvent = null; // Enqueue and process the abstract event manually.\n\n  if (syntheticEvent) {\n    EventPluginHub.enqueueEvents(syntheticEvent);\n    EventPluginHub.processEventQueue();\n  }\n}\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\n\n\nvar SelectEventPlugin = {\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {\n          activeElement = topLevelTarget;\n          activeElementID = topLevelTargetID;\n          lastSelection = null;\n        }\n\n        break;\n\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementID = null;\n        lastSelection = null;\n        break;\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent);\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't).\n\n      case topLevelTypes.topSelectionChange:\n        return constructSelectEvent(nativeEvent);\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry.\n\n      case topLevelTypes.topKeyDown:\n        if (!useSelectionChange) {\n          activeNativeEvent = nativeEvent;\n          setTimeout(dispatchDeferredSelectEvent, 0);\n        }\n\n        break;\n    }\n  }\n};\nmodule.exports = SelectEventPlugin;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/SelectEventPlugin.js"],"names":["EventConstants","require","EventPluginHub","EventPropagators","ExecutionEnvironment","ReactInputSelection","SyntheticEvent","getActiveElement","isTextInputElement","keyOf","shallowEqual","topLevelTypes","eventTypes","select","phasedRegistrationNames","bubbled","onSelect","captured","onSelectCapture","useSelectionChange","canUseDOM","document","activeElement","activeElementID","activeNativeEvent","lastSelection","mouseDown","getSelection","node","hasSelectionCapabilities","start","selectionStart","end","selectionEnd","selection","range","createRange","parentElement","text","top","boundingTop","left","boundingLeft","window","anchorNode","anchorOffset","focusNode","focusOffset","constructSelectEvent","nativeEvent","currentSelection","syntheticEvent","getPooled","type","target","accumulateTwoPhaseDispatches","dispatchDeferredSelectEvent","enqueueEvents","processEventQueue","SelectEventPlugin","extractEvents","topLevelType","topLevelTarget","topLevelTargetID","topFocus","contentEditable","topBlur","topMouseDown","topContextMenu","topMouseUp","topSelectionChange","topKeyDown","setTimeout","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule SelectEventPlugin\n */\n\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar ReactInputSelection = require(\"./ReactInputSelection\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar getActiveElement = require(\"./getActiveElement\");\nvar isTextInputElement = require(\"./isTextInputElement\");\nvar keyOf = require(\"./keyOf\");\nvar shallowEqual = require(\"./shallowEqual\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onSelect: null}),\n      captured: keyOf({onSelectCapture: null})\n    }\n  }\n};\n\nvar useSelectionChange = false;\n\nif (ExecutionEnvironment.canUseDOM) {\n  useSelectionChange = 'onselectionchange' in document;\n}\n\nvar activeElement = null;\nvar activeElementID = null;\nvar activeNativeEvent = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @param {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node &&\n      ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  } else {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior).\n  if (mouseDown || activeElement != getActiveElement()) {\n    return;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(\n      eventTypes.select,\n      activeElementID,\n      nativeEvent\n    );\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n}\n\n/**\n * Handle deferred event. And manually dispatch synthetic events.\n */\nfunction dispatchDeferredSelectEvent() {\n  if (!activeNativeEvent) {\n    return;\n  }\n\n  var syntheticEvent = constructSelectEvent(activeNativeEvent);\n  activeNativeEvent = null;\n\n  // Enqueue and process the abstract event manually.\n  if (syntheticEvent) {\n    EventPluginHub.enqueueEvents(syntheticEvent);\n    EventPluginHub.processEventQueue();\n  }\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(topLevelTarget) ||\n            topLevelTarget.contentEditable === 'true') {\n          activeElement = topLevelTarget;\n          activeElementID = topLevelTargetID;\n          lastSelection = null;\n        }\n        break;\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementID = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't).\n      case topLevelTypes.topSelectionChange:\n        return constructSelectEvent(nativeEvent);\n\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry.\n      case topLevelTypes.topKeyDown:\n        if (!useSelectionChange) {\n          activeNativeEvent = nativeEvent;\n          setTimeout(dispatchDeferredSelectEvent, 0);\n        }\n        break;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n"]},"metadata":{},"sourceType":"script"}