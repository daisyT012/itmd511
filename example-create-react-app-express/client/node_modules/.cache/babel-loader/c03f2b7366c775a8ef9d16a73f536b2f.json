{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule LinkedValueMixin\n * @typechecks static-only\n */\n\"use strict\";\n\nvar invariant = require(\"./invariant\");\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\n\n\nvar LinkedValueMixin = {\n  _assertLink: function () {\n    \"production\" !== process.env.NODE_ENV ? invariant(this.props.value == null && this.props.onChange == null, 'Cannot provide a valueLink and a value or onChange event. If you ' + 'want to use value or onChange, you probably don\\'t want to use ' + 'valueLink') : invariant(this.props.value == null && this.props.onChange == null);\n  },\n\n  /**\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function () {\n    if (this.props.valueLink) {\n      this._assertLink();\n\n      return this.props.valueLink.value;\n    }\n\n    return this.props.value;\n  },\n\n  /**\n   * @return {function} change callback either from onChange prop or link.\n   */\n  getOnChange: function () {\n    if (this.props.valueLink) {\n      this._assertLink();\n\n      return this._handleLinkedValueChange;\n    }\n\n    return this.props.onChange;\n  },\n\n  /**\n   * @param {SyntheticEvent} e change event to handle\n   */\n  _handleLinkedValueChange: function (e) {\n    this.props.valueLink.requestChange(e.target.value);\n  }\n};\nmodule.exports = LinkedValueMixin;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/LinkedValueMixin.js"],"names":["invariant","require","LinkedValueMixin","_assertLink","process","env","NODE_ENV","props","value","onChange","getValue","valueLink","getOnChange","_handleLinkedValueChange","e","requestChange","target","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;AAEA;AACA;AACA;AACA;;;AACA,IAAIC,gBAAgB,GAAG;AACrBC,EAAAA,WAAW,EAAE,YAAW;AACrB,qBAAiBC,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCN,SAAS,CAChD,KAAKO,KAAL,CAAWC,KAAX,IAAoB,IAApB,IAA4B,KAAKD,KAAL,CAAWE,QAAX,IAAuB,IADH,EAEhD,sEACE,iEADF,GAEE,WAJ8C,CAAjD,GAKGT,SAAS,CAAC,KAAKO,KAAL,CAAWC,KAAX,IAAoB,IAApB,IAA4B,KAAKD,KAAL,CAAWE,QAAX,IAAuB,IAApD,CALb;AAMD,GARoB;;AAUrB;AACF;AACA;AACEC,EAAAA,QAAQ,EAAE,YAAW;AACnB,QAAI,KAAKH,KAAL,CAAWI,SAAf,EAA0B;AACxB,WAAKR,WAAL;;AACA,aAAO,KAAKI,KAAL,CAAWI,SAAX,CAAqBH,KAA5B;AACD;;AACD,WAAO,KAAKD,KAAL,CAAWC,KAAlB;AACD,GAnBoB;;AAqBrB;AACF;AACA;AACEI,EAAAA,WAAW,EAAE,YAAW;AACtB,QAAI,KAAKL,KAAL,CAAWI,SAAf,EAA0B;AACxB,WAAKR,WAAL;;AACA,aAAO,KAAKU,wBAAZ;AACD;;AACD,WAAO,KAAKN,KAAL,CAAWE,QAAlB;AACD,GA9BoB;;AAgCrB;AACF;AACA;AACEI,EAAAA,wBAAwB,EAAE,UAASC,CAAT,EAAY;AACpC,SAAKP,KAAL,CAAWI,SAAX,CAAqBI,aAArB,CAAmCD,CAAC,CAACE,MAAF,CAASR,KAA5C;AACD;AArCoB,CAAvB;AAwCAS,MAAM,CAACC,OAAP,GAAiBhB,gBAAjB","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule LinkedValueMixin\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueMixin = {\n  _assertLink: function() {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      this.props.value == null && this.props.onChange == null,\n      'Cannot provide a valueLink and a value or onChange event. If you ' +\n        'want to use value or onChange, you probably don\\'t want to use ' +\n        'valueLink'\n    ) : invariant(this.props.value == null && this.props.onChange == null));\n  },\n\n  /**\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function() {\n    if (this.props.valueLink) {\n      this._assertLink();\n      return this.props.valueLink.value;\n    }\n    return this.props.value;\n  },\n\n  /**\n   * @return {function} change callback either from onChange prop or link.\n   */\n  getOnChange: function() {\n    if (this.props.valueLink) {\n      this._assertLink();\n      return this._handleLinkedValueChange;\n    }\n    return this.props.onChange;\n  },\n\n  /**\n   * @param {SyntheticEvent} e change event to handle\n   */\n  _handleLinkedValueChange: function(e) {\n    this.props.valueLink.requestChange(e.target.value);\n  }\n};\n\nmodule.exports = LinkedValueMixin;\n"]},"metadata":{},"sourceType":"script"}