{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\"use strict\";\n\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar Transaction = require(\"./Transaction\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar mixInto = require(\"./mixInto\");\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\nmixInto(ReactDefaultBatchingStrategyTransaction, Transaction.Mixin);\nmixInto(ReactDefaultBatchingStrategyTransaction, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  }\n});\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function (callback, param) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true; // The code is written this way to avoid extra allocations\n\n    if (alreadyBatchingUpdates) {\n      callback(param);\n    } else {\n      transaction.perform(callback, null, param);\n    }\n  }\n};\nmodule.exports = ReactDefaultBatchingStrategy;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/ReactDefaultBatchingStrategy.js"],"names":["ReactUpdates","require","Transaction","emptyFunction","mixInto","RESET_BATCHED_UPDATES","initialize","close","ReactDefaultBatchingStrategy","isBatchingUpdates","FLUSH_BATCHED_UPDATES","flushBatchedUpdates","bind","TRANSACTION_WRAPPERS","ReactDefaultBatchingStrategyTransaction","reinitializeTransaction","Mixin","getTransactionWrappers","transaction","batchedUpdates","callback","param","alreadyBatchingUpdates","perform","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIE,aAAa,GAAGF,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,WAAD,CAArB;;AAEA,IAAII,qBAAqB,GAAG;AAC1BC,EAAAA,UAAU,EAAEH,aADc;AAE1BI,EAAAA,KAAK,EAAE,YAAW;AAChBC,IAAAA,4BAA4B,CAACC,iBAA7B,GAAiD,KAAjD;AACD;AAJyB,CAA5B;AAOA,IAAIC,qBAAqB,GAAG;AAC1BJ,EAAAA,UAAU,EAAEH,aADc;AAE1BI,EAAAA,KAAK,EAAEP,YAAY,CAACW,mBAAb,CAAiCC,IAAjC,CAAsCZ,YAAtC;AAFmB,CAA5B;AAKA,IAAIa,oBAAoB,GAAG,CAACH,qBAAD,EAAwBL,qBAAxB,CAA3B;;AAEA,SAASS,uCAAT,GAAmD;AACjD,OAAKC,uBAAL;AACD;;AAEDX,OAAO,CAACU,uCAAD,EAA0CZ,WAAW,CAACc,KAAtD,CAAP;AACAZ,OAAO,CAACU,uCAAD,EAA0C;AAC/CG,EAAAA,sBAAsB,EAAE,YAAW;AACjC,WAAOJ,oBAAP;AACD;AAH8C,CAA1C,CAAP;AAMA,IAAIK,WAAW,GAAG,IAAIJ,uCAAJ,EAAlB;AAEA,IAAIN,4BAA4B,GAAG;AACjCC,EAAAA,iBAAiB,EAAE,KADc;;AAGjC;AACF;AACA;AACA;AACEU,EAAAA,cAAc,EAAE,UAASC,QAAT,EAAmBC,KAAnB,EAA0B;AACxC,QAAIC,sBAAsB,GAAGd,4BAA4B,CAACC,iBAA1D;AAEAD,IAAAA,4BAA4B,CAACC,iBAA7B,GAAiD,IAAjD,CAHwC,CAKxC;;AACA,QAAIa,sBAAJ,EAA4B;AAC1BF,MAAAA,QAAQ,CAACC,KAAD,CAAR;AACD,KAFD,MAEO;AACLH,MAAAA,WAAW,CAACK,OAAZ,CAAoBH,QAApB,EAA8B,IAA9B,EAAoCC,KAApC;AACD;AACF;AAlBgC,CAAnC;AAqBAG,MAAM,CAACC,OAAP,GAAiBjB,4BAAjB","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n\"use strict\";\n\nvar ReactUpdates = require(\"./ReactUpdates\");\nvar Transaction = require(\"./Transaction\");\n\nvar emptyFunction = require(\"./emptyFunction\");\nvar mixInto = require(\"./mixInto\");\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function() {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\nmixInto(ReactDefaultBatchingStrategyTransaction, Transaction.Mixin);\nmixInto(ReactDefaultBatchingStrategyTransaction, {\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  }\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function(callback, param) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      callback(param);\n    } else {\n      transaction.perform(callback, null, param);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n"]},"metadata":{},"sourceType":"script"}