{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar EventPropagators = require(\"./EventPropagators\");\n\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\nvar ReactMount = require(\"./ReactMount\");\n\nvar keyOf = require(\"./keyOf\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({\n      onMouseEnter: null\n    })\n  },\n  mouseLeave: {\n    registrationName: keyOf({\n      onMouseLeave: null\n    })\n  }\n};\nvar extractedEvents = [null, null];\nvar EnterLeaveEventPlugin = {\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {\n    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n\n    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var from, to;\n\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) || window;\n    } else {\n      from = window;\n      to = topLevelTarget;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromID = from ? ReactMount.getID(from) : '';\n    var toID = to ? ReactMount.getID(to) : '';\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent);\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent);\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n    return extractedEvents;\n  }\n};\nmodule.exports = EnterLeaveEventPlugin;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/EnterLeaveEventPlugin.js"],"names":["EventConstants","require","EventPropagators","SyntheticMouseEvent","ReactMount","keyOf","topLevelTypes","getFirstReactDOM","eventTypes","mouseEnter","registrationName","onMouseEnter","mouseLeave","onMouseLeave","extractedEvents","EnterLeaveEventPlugin","extractEvents","topLevelType","topLevelTarget","topLevelTargetID","nativeEvent","topMouseOver","relatedTarget","fromElement","topMouseOut","from","to","toElement","window","fromID","getID","toID","leave","getPooled","enter","accumulateEnterLeaveDispatches","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\nvar ReactMount = require(\"./ReactMount\");\nvar keyOf = require(\"./keyOf\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\nvar eventTypes = {\n  mouseEnter: {registrationName: keyOf({onMouseEnter: null})},\n  mouseLeave: {registrationName: keyOf({onMouseLeave: null})}\n};\n\nvar extractedEvents = [null, null];\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topMouseOver &&\n        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut &&\n        topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var from, to;\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      to =\n        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||\n        window;\n    } else {\n      from = window;\n      to = topLevelTarget;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromID = from ? ReactMount.getID(from) : '';\n    var toID = to ? ReactMount.getID(to) : '';\n\n    var leave = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseLeave,\n      fromID,\n      nativeEvent\n    );\n    var enter = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseEnter,\n      toID,\n      nativeEvent\n    );\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n\n    return extractedEvents;\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n"]},"metadata":{},"sourceType":"script"}