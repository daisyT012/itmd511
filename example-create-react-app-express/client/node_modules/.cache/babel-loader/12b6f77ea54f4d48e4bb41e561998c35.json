{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule isEventSupported\n */\n\"use strict\";\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar testNode, useHasFeature;\n\nif (ExecutionEnvironment.canUseDOM) {\n  testNode = document.createElement('div');\n  useHasFeature = document.implementation && document.implementation.hasFeature && // `hasFeature` always returns true in Firefox 19+.\n  document.implementation.hasFeature('', '') !== true;\n}\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\n\n\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!testNode || capture && !testNode.addEventListener) {\n    return false;\n  }\n\n  var element = document.createElement('div');\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = (eventName in element);\n\n  if (!isSupported) {\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n\n    if (typeof element[eventName] !== 'undefined') {\n      element[eventName] = undefined;\n    }\n\n    element.removeAttribute(eventName);\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  element = null;\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/isEventSupported.js"],"names":["ExecutionEnvironment","require","testNode","useHasFeature","canUseDOM","document","createElement","implementation","hasFeature","isEventSupported","eventNameSuffix","capture","addEventListener","element","eventName","isSupported","setAttribute","undefined","removeAttribute","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAAlC;;AAEA,IAAIC,QAAJ,EAAcC,aAAd;;AACA,IAAIH,oBAAoB,CAACI,SAAzB,EAAoC;AAClCF,EAAAA,QAAQ,GAAGG,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AACAH,EAAAA,aAAa,GACXE,QAAQ,CAACE,cAAT,IACAF,QAAQ,CAACE,cAAT,CAAwBC,UADxB,IAEA;AACAH,EAAAA,QAAQ,CAACE,cAAT,CAAwBC,UAAxB,CAAmC,EAAnC,EAAuC,EAAvC,MAA+C,IAJjD;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,gBAAT,CAA0BC,eAA1B,EAA2CC,OAA3C,EAAoD;AAClD,MAAI,CAACT,QAAD,IAAcS,OAAO,IAAI,CAACT,QAAQ,CAACU,gBAAvC,EAA0D;AACxD,WAAO,KAAP;AACD;;AACD,MAAIC,OAAO,GAAGR,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AAEA,MAAIQ,SAAS,GAAG,OAAOJ,eAAvB;AACA,MAAIK,WAAW,IAAGD,SAAS,IAAID,OAAhB,CAAf;;AAEA,MAAI,CAACE,WAAL,EAAkB;AAChBF,IAAAA,OAAO,CAACG,YAAR,CAAqBF,SAArB,EAAgC,SAAhC;AACAC,IAAAA,WAAW,GAAG,OAAOF,OAAO,CAACC,SAAD,CAAd,KAA8B,UAA5C;;AACA,QAAI,OAAOD,OAAO,CAACC,SAAD,CAAd,KAA8B,WAAlC,EAA+C;AAC7CD,MAAAA,OAAO,CAACC,SAAD,CAAP,GAAqBG,SAArB;AACD;;AACDJ,IAAAA,OAAO,CAACK,eAAR,CAAwBJ,SAAxB;AACD;;AAED,MAAI,CAACC,WAAD,IAAgBZ,aAAhB,IAAiCO,eAAe,KAAK,OAAzD,EAAkE;AAChE;AACAK,IAAAA,WAAW,GAAGV,QAAQ,CAACE,cAAT,CAAwBC,UAAxB,CAAmC,cAAnC,EAAmD,KAAnD,CAAd;AACD;;AAEDK,EAAAA,OAAO,GAAG,IAAV;AACA,SAAOE,WAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBX,gBAAjB","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule isEventSupported\n */\n\n\"use strict\";\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar testNode, useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  testNode = document.createElement('div');\n  useHasFeature =\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // `hasFeature` always returns true in Firefox 19+.\n    document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!testNode || (capture && !testNode.addEventListener)) {\n    return false;\n  }\n  var element = document.createElement('div');\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in element;\n\n  if (!isSupported) {\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n    if (typeof element[eventName] !== 'undefined') {\n      element[eventName] = undefined;\n    }\n    element.removeAttribute(eventName);\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  element = null;\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n"]},"metadata":{},"sourceType":"script"}