{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule getUnboundedScrollPosition\n * @typechecks\n */\n\"use strict\";\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\n\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: document.documentElement.scrollLeft || document.body.scrollLeft,\n      y: document.documentElement.scrollTop || document.body.scrollTop\n    };\n  }\n\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/getUnboundedScrollPosition.js"],"names":["getUnboundedScrollPosition","scrollable","window","x","document","documentElement","scrollLeft","body","y","scrollTop","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,0BAAT,CAAoCC,UAApC,EAAgD;AAC9C,MAAIA,UAAU,KAAKC,MAAnB,EAA2B;AACzB,WAAO;AACLC,MAAAA,CAAC,EAAEC,QAAQ,CAACC,eAAT,CAAyBC,UAAzB,IAAuCF,QAAQ,CAACG,IAAT,CAAcD,UADnD;AAELE,MAAAA,CAAC,EAAEJ,QAAQ,CAACC,eAAT,CAAyBI,SAAzB,IAAuCL,QAAQ,CAACG,IAAT,CAAcE;AAFnD,KAAP;AAID;;AACD,SAAO;AACLN,IAAAA,CAAC,EAAEF,UAAU,CAACK,UADT;AAELE,IAAAA,CAAC,EAAEP,UAAU,CAACQ;AAFT,GAAP;AAID;;AAEDC,MAAM,CAACC,OAAP,GAAiBX,0BAAjB","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule getUnboundedScrollPosition\n * @typechecks\n */\n\n\"use strict\";\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: document.documentElement.scrollLeft || document.body.scrollLeft,\n      y: document.documentElement.scrollTop  || document.body.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n"]},"metadata":{},"sourceType":"script"}