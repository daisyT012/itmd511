{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactMountReady\n */\n\"use strict\";\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar mixInto = require(\"./mixInto\");\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `ReactMountReady.getPooled()`.\n *\n * @param {?array<function>} initialCollection\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\n\n\nfunction ReactMountReady(initialCollection) {\n  this._queue = initialCollection || null;\n}\n\nmixInto(ReactMountReady, {\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked. This is used\n   * to enqueue calls to `componentDidMount` and `componentDidUpdate`.\n   *\n   * @param {ReactComponent} component Component being rendered.\n   * @param {function(DOMElement)} callback Invoked when `notifyAll` is invoked.\n   * @internal\n   */\n  enqueue: function (component, callback) {\n    this._queue = this._queue || [];\n\n    this._queue.push({\n      component: component,\n      callback: callback\n    });\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function () {\n    var queue = this._queue;\n\n    if (queue) {\n      this._queue = null;\n\n      for (var i = 0, l = queue.length; i < l; i++) {\n        var component = queue[i].component;\n        var callback = queue[i].callback;\n        callback.call(component, component.getDOMNode());\n      }\n\n      queue.length = 0;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function () {\n    this._queue = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function () {\n    this.reset();\n  }\n});\nPooledClass.addPoolingTo(ReactMountReady);\nmodule.exports = ReactMountReady;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/ReactMountReady.js"],"names":["PooledClass","require","mixInto","ReactMountReady","initialCollection","_queue","enqueue","component","callback","push","notifyAll","queue","i","l","length","call","getDOMNode","reset","destructor","addPoolingTo","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,eAAT,CAAyBC,iBAAzB,EAA4C;AAC1C,OAAKC,MAAL,GAAcD,iBAAiB,IAAI,IAAnC;AACD;;AAEDF,OAAO,CAACC,eAAD,EAAkB;AAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEG,EAAAA,OAAO,EAAE,UAASC,SAAT,EAAoBC,QAApB,EAA8B;AACrC,SAAKH,MAAL,GAAc,KAAKA,MAAL,IAAe,EAA7B;;AACA,SAAKA,MAAL,CAAYI,IAAZ,CAAiB;AAACF,MAAAA,SAAS,EAAEA,SAAZ;AAAuBC,MAAAA,QAAQ,EAAEA;AAAjC,KAAjB;AACD,GAbsB;;AAevB;AACF;AACA;AACA;AACA;AACA;AACEE,EAAAA,SAAS,EAAE,YAAW;AACpB,QAAIC,KAAK,GAAG,KAAKN,MAAjB;;AACA,QAAIM,KAAJ,EAAW;AACT,WAAKN,MAAL,GAAc,IAAd;;AACA,WAAK,IAAIO,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,YAAIL,SAAS,GAAGI,KAAK,CAACC,CAAD,CAAL,CAASL,SAAzB;AACA,YAAIC,QAAQ,GAAGG,KAAK,CAACC,CAAD,CAAL,CAASJ,QAAxB;AACAA,QAAAA,QAAQ,CAACO,IAAT,CAAcR,SAAd,EAAyBA,SAAS,CAACS,UAAV,EAAzB;AACD;;AACDL,MAAAA,KAAK,CAACG,MAAN,GAAe,CAAf;AACD;AACF,GAhCsB;;AAkCvB;AACF;AACA;AACA;AACA;AACEG,EAAAA,KAAK,EAAE,YAAW;AAChB,SAAKZ,MAAL,GAAc,IAAd;AACD,GAzCsB;;AA2CvB;AACF;AACA;AACEa,EAAAA,UAAU,EAAE,YAAW;AACrB,SAAKD,KAAL;AACD;AAhDsB,CAAlB,CAAP;AAoDAjB,WAAW,CAACmB,YAAZ,CAAyBhB,eAAzB;AAEAiB,MAAM,CAACC,OAAP,GAAiBlB,eAAjB","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactMountReady\n */\n\n\"use strict\";\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar mixInto = require(\"./mixInto\");\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `ReactMountReady.getPooled()`.\n *\n * @param {?array<function>} initialCollection\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\nfunction ReactMountReady(initialCollection) {\n  this._queue = initialCollection || null;\n}\n\nmixInto(ReactMountReady, {\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked. This is used\n   * to enqueue calls to `componentDidMount` and `componentDidUpdate`.\n   *\n   * @param {ReactComponent} component Component being rendered.\n   * @param {function(DOMElement)} callback Invoked when `notifyAll` is invoked.\n   * @internal\n   */\n  enqueue: function(component, callback) {\n    this._queue = this._queue || [];\n    this._queue.push({component: component, callback: callback});\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function() {\n    var queue = this._queue;\n    if (queue) {\n      this._queue = null;\n      for (var i = 0, l = queue.length; i < l; i++) {\n        var component = queue[i].component;\n        var callback = queue[i].callback;\n        callback.call(component, component.getDOMNode());\n      }\n      queue.length = 0;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function() {\n    this._queue = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function() {\n    this.reset();\n  }\n\n});\n\nPooledClass.addPoolingTo(ReactMountReady);\n\nmodule.exports = ReactMountReady;\n"]},"metadata":{},"sourceType":"script"}