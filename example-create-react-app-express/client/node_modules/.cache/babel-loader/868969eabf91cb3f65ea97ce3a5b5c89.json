{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\"use strict\";\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar escapeTextForBrowser = require(\"./escapeTextForBrowser\");\n\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null || DOMProperty.hasBooleanValue[name] && !value || DOMProperty.hasPositiveNumericValue[name] && (isNaN(value) || value < 1);\n}\n\nvar processAttributeNameAndPrefix = memoizeStringOnly(function (name) {\n  return escapeTextForBrowser(name) + '=\"';\n});\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var reactProps = {\n    __owner__: true,\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function (name) {\n    if (reactProps[name] || warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase(); // data-* attributes should be lowercase; suggest the lowercase version\n\n    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName[lowerCasedName]; // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n\n    if (standardName != null) {\n      console.warn('Unknown DOM property ' + name + '. Did you mean ' + standardName + '?');\n    }\n  };\n}\n/**\n * Operations for dealing with DOM properties.\n */\n\n\nvar DOMPropertyOperations = {\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    if (DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n\n      var attributeName = DOMProperty.getAttributeName[name];\n      return processAttributeNameAndPrefix(attributeName) + escapeTextForBrowser(value) + '\"';\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n\n      return processAttributeNameAndPrefix(name) + escapeTextForBrowser(value) + '\"';\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    if (DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n\n        if (!DOMProperty.hasSideEffects[name] || node[propName] !== value) {\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    if (DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, name);\n\n        if (!DOMProperty.hasSideEffects[name] || node[propName] !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  }\n};\nmodule.exports = DOMPropertyOperations;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/DOMPropertyOperations.js"],"names":["DOMProperty","require","escapeTextForBrowser","memoizeStringOnly","shouldIgnoreValue","name","value","hasBooleanValue","hasPositiveNumericValue","isNaN","processAttributeNameAndPrefix","process","env","NODE_ENV","reactProps","__owner__","children","dangerouslySetInnerHTML","key","ref","warnedProperties","warnUnknownProperty","lowerCasedName","toLowerCase","standardName","isCustomAttribute","getPossibleStandardName","console","warn","DOMPropertyOperations","createMarkupForProperty","isStandardName","attributeName","getAttributeName","setValueForProperty","node","mutationMethod","getMutationMethod","deleteValueForProperty","mustUseAttribute","setAttribute","propName","getPropertyName","hasSideEffects","removeAttribute","undefined","defaultValue","getDefaultValueForProperty","nodeName","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar escapeTextForBrowser = require(\"./escapeTextForBrowser\");\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null ||\n    DOMProperty.hasBooleanValue[name] && !value ||\n    DOMProperty.hasPositiveNumericValue[name] && (isNaN(value) || value < 1);\n}\n\nvar processAttributeNameAndPrefix = memoizeStringOnly(function(name) {\n  return escapeTextForBrowser(name) + '=\"';\n});\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var reactProps = {\n    __owner__: true,\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function(name) {\n    if (reactProps[name] || warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ?\n      lowerCasedName : DOMProperty.getPossibleStandardName[lowerCasedName];\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    if (standardName != null) {\n      console.warn(\n        'Unknown DOM property ' + name + '. Did you mean ' + standardName + '?'\n      );\n    }\n\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function(name, value) {\n    if (DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n      var attributeName = DOMProperty.getAttributeName[name];\n      return processAttributeNameAndPrefix(attributeName) +\n        escapeTextForBrowser(value) + '\"';\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return processAttributeNameAndPrefix(name) +\n        escapeTextForBrowser(value) + '\"';\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function(node, name, value) {\n    if (DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        if (!DOMProperty.hasSideEffects[name] || node[propName] !== value) {\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function(node, name) {\n    if (DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(\n          node.nodeName,\n          name\n        );\n        if (!DOMProperty.hasSideEffects[name] ||\n            node[propName] !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n"]},"metadata":{},"sourceType":"script"}