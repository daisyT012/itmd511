{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDOMSelection\n */\n\"use strict\";\n\nvar getNodeForCharacterOffset = require(\"./getNodeForCharacterOffset\");\n\nvar getTextContentAccessor = require(\"./getTextContentAccessor\");\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\n\n\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length; // Duplicate selection so we can move range without breaking user selection.\n\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\n\n\nfunction getModernOffsets(node) {\n  var selection = window.getSelection();\n\n  if (selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n  var currentRange = selection.getRangeAt(0);\n  var rangeLength = currentRange.toString().length;\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n  var start = tempRange.toString().length;\n  var end = start + rangeLength; // Detect whether the selection is backward.\n\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n  detectionRange.detach();\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\n\n\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (typeof offsets.end === 'undefined') {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\n\n\nfunction setModernOffsets(node, offsets) {\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n\n    range.detach();\n  }\n}\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: function (node) {\n    var getOffsets = document.selection ? getIEOffsets : getModernOffsets;\n    return getOffsets(node);\n  },\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: function (node, offsets) {\n    var setOffsets = document.selection ? setIEOffsets : setModernOffsets;\n    setOffsets(node, offsets);\n  }\n};\nmodule.exports = ReactDOMSelection;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/ReactDOMSelection.js"],"names":["getNodeForCharacterOffset","require","getTextContentAccessor","getIEOffsets","node","selection","document","selectedRange","createRange","selectedLength","text","length","fromStart","duplicate","moveToElementText","setEndPoint","startOffset","endOffset","start","end","getModernOffsets","window","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","currentRange","getRangeAt","rangeLength","toString","tempRange","cloneRange","selectNodeContents","setEnd","startContainer","detectionRange","setStart","isBackward","collapsed","detach","setIEOffsets","offsets","range","moveStart","moveEnd","select","setModernOffsets","Math","min","extend","temp","startMarker","endMarker","offset","removeAllRanges","addRange","ReactDOMSelection","getOffsets","setOffsets","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDOMSelection\n */\n\n\"use strict\";\n\nvar getNodeForCharacterOffset = require(\"./getNodeForCharacterOffset\");\nvar getTextContentAccessor = require(\"./getTextContentAccessor\");\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection();\n\n  if (selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n  var rangeLength = currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var start = tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n  detectionRange.detach();\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (typeof offsets.end === 'undefined') {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  var selection = window.getSelection();\n\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = typeof offsets.end === 'undefined' ?\n            start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n\n    range.detach();\n  }\n}\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: function(node) {\n    var getOffsets = document.selection ? getIEOffsets : getModernOffsets;\n    return getOffsets(node);\n  },\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: function(node, offsets) {\n    var setOffsets = document.selection ? setIEOffsets : setModernOffsets;\n    setOffsets(node, offsets);\n  }\n};\n\nmodule.exports = ReactDOMSelection;\n"]},"metadata":{},"sourceType":"script"}