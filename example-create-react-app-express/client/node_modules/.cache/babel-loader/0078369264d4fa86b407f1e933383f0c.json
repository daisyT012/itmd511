{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule SyntheticMouseEvent\n * @typechecks static-only\n */\n\"use strict\";\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n\n    if ('which' in event) {\n      return button;\n    } // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n\n\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\n\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\nmodule.exports = SyntheticMouseEvent;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/SyntheticMouseEvent.js"],"names":["SyntheticUIEvent","require","ViewportMetrics","MouseEventInterface","screenX","screenY","clientX","clientY","ctrlKey","shiftKey","altKey","metaKey","button","event","buttons","relatedTarget","fromElement","srcElement","toElement","pageX","currentScrollLeft","pageY","currentScrollTop","SyntheticMouseEvent","dispatchConfig","dispatchMarker","nativeEvent","call","augmentClass","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA7B;AAEA;AACA;AACA;AACA;;;AACA,IAAIE,mBAAmB,GAAG;AACxBC,EAAAA,OAAO,EAAE,IADe;AAExBC,EAAAA,OAAO,EAAE,IAFe;AAGxBC,EAAAA,OAAO,EAAE,IAHe;AAIxBC,EAAAA,OAAO,EAAE,IAJe;AAKxBC,EAAAA,OAAO,EAAE,IALe;AAMxBC,EAAAA,QAAQ,EAAE,IANc;AAOxBC,EAAAA,MAAM,EAAE,IAPgB;AAQxBC,EAAAA,OAAO,EAAE,IARe;AASxBC,EAAAA,MAAM,EAAE,UAASC,KAAT,EAAgB;AACtB;AACA;AACA;AACA,QAAID,MAAM,GAAGC,KAAK,CAACD,MAAnB;;AACA,QAAI,WAAWC,KAAf,EAAsB;AACpB,aAAOD,MAAP;AACD,KAPqB,CAQtB;AACA;AACA;AACA;;;AACA,WAAOA,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmB,CAA7C;AACD,GAtBuB;AAuBxBE,EAAAA,OAAO,EAAE,IAvBe;AAwBxBC,EAAAA,aAAa,EAAE,UAASF,KAAT,EAAgB;AAC7B,WAAOA,KAAK,CAACE,aAAN,KACLF,KAAK,CAACG,WAAN,KAAsBH,KAAK,CAACI,UAA5B,GACEJ,KAAK,CAACK,SADR,GAEEL,KAAK,CAACG,WAHH,CAAP;AAKD,GA9BuB;AA+BxB;AACAG,EAAAA,KAAK,EAAE,UAASN,KAAT,EAAgB;AACrB,WAAO,WAAWA,KAAX,GACLA,KAAK,CAACM,KADD,GAELN,KAAK,CAACP,OAAN,GAAgBJ,eAAe,CAACkB,iBAFlC;AAGD,GApCuB;AAqCxBC,EAAAA,KAAK,EAAE,UAASR,KAAT,EAAgB;AACrB,WAAO,WAAWA,KAAX,GACLA,KAAK,CAACQ,KADD,GAELR,KAAK,CAACN,OAAN,GAAgBL,eAAe,CAACoB,gBAFlC;AAGD;AAzCuB,CAA1B;AA4CA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,mBAAT,CAA6BC,cAA7B,EAA6CC,cAA7C,EAA6DC,WAA7D,EAA0E;AACxE1B,EAAAA,gBAAgB,CAAC2B,IAAjB,CAAsB,IAAtB,EAA4BH,cAA5B,EAA4CC,cAA5C,EAA4DC,WAA5D;AACD;;AAED1B,gBAAgB,CAAC4B,YAAjB,CAA8BL,mBAA9B,EAAmDpB,mBAAnD;AAEA0B,MAAM,CAACC,OAAP,GAAiBP,mBAAjB","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule SyntheticMouseEvent\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  button: function(event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function(event) {\n    return event.relatedTarget || (\n      event.fromElement === event.srcElement ?\n        event.toElement :\n        event.fromElement\n    );\n  },\n  // \"Proprietary\" Interface.\n  pageX: function(event) {\n    return 'pageX' in event ?\n      event.pageX :\n      event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function(event) {\n    return 'pageY' in event ?\n      event.pageY :\n      event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n"]},"metadata":{},"sourceType":"script"}