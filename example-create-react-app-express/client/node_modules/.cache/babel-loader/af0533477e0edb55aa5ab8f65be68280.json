{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule invariant\n */\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf style format and arguments to provide information about\n * what broke and what you were expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\nfunction invariant(condition) {\n  if (!condition) {\n    throw new Error('Invariant Violation');\n  }\n}\n\nmodule.exports = invariant;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var invariantDev = function (condition, format, a, b, c, d, e, f) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n\n    if (!condition) {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      throw new Error('Invariant Violation: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n    }\n  };\n\n  module.exports = invariantDev;\n}","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/invariant.js"],"names":["invariant","condition","Error","module","exports","process","env","NODE_ENV","invariantDev","format","a","b","c","d","e","f","undefined","args","argIndex","replace"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAT,CAAmBC,SAAnB,EAA8B;AAC5B,MAAI,CAACA,SAAL,EAAgB;AACd,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiBJ,SAAjB;;AAEA,IAAI,iBAAiBK,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;AACzC,MAAIC,YAAY,GAAG,UAASP,SAAT,EAAoBQ,MAApB,EAA4BC,CAA5B,EAA+BC,CAA/B,EAAkCC,CAAlC,EAAqCC,CAArC,EAAwCC,CAAxC,EAA2CC,CAA3C,EAA8C;AAC/D,QAAIN,MAAM,KAAKO,SAAf,EAA0B;AACxB,YAAM,IAAId,KAAJ,CAAU,8CAAV,CAAN;AACD;;AAED,QAAI,CAACD,SAAL,EAAgB;AACd,UAAIgB,IAAI,GAAG,CAACP,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,CAAX;AACA,UAAIG,QAAQ,GAAG,CAAf;AACA,YAAM,IAAIhB,KAAJ,CACJ,0BACAO,MAAM,CAACU,OAAP,CAAe,KAAf,EAAsB,YAAW;AAAE,eAAOF,IAAI,CAACC,QAAQ,EAAT,CAAX;AAA0B,OAA7D,CAFI,CAAN;AAID;AACF,GAbD;;AAeAf,EAAAA,MAAM,CAACC,OAAP,GAAiBI,YAAjB;AACD","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule invariant\n */\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf style format and arguments to provide information about\n * what broke and what you were expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nfunction invariant(condition) {\n  if (!condition) {\n    throw new Error('Invariant Violation');\n  }\n}\n\nmodule.exports = invariant;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var invariantDev = function(condition, format, a, b, c, d, e, f) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n\n    if (!condition) {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      throw new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n  };\n\n  module.exports = invariantDev;\n}\n"]},"metadata":{},"sourceType":"script"}