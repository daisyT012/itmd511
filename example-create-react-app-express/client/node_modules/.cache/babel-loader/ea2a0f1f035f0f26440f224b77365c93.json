{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n */\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listens to bubbled events on a DOM node.\n   *\n   * @param {Element} el DOM element to register listener on.\n   * @param {string} handlerBaseName 'click'/'mouseover'\n   * @param {Function!} cb Callback function\n   */\n  listen: function (el, handlerBaseName, cb) {\n    if (el.addEventListener) {\n      el.addEventListener(handlerBaseName, cb, false);\n    } else if (el.attachEvent) {\n      el.attachEvent('on' + handlerBaseName, cb);\n    }\n  },\n\n  /**\n   * Listens to captured events on a DOM node.\n   *\n   * @see `EventListener.listen` for params.\n   * @throws Exception if addEventListener is not supported.\n   */\n  capture: function (el, handlerBaseName, cb) {\n    if (!el.addEventListener) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        console.error('You are attempting to use addEventListener ' + 'in a browser that does not support it.' + 'This likely means that you will not receive events that ' + 'your application relies on (such as scroll).');\n      }\n\n      return;\n    } else {\n      el.addEventListener(handlerBaseName, cb, true);\n    }\n  }\n};\nmodule.exports = EventListener;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/EventListener.js"],"names":["EventListener","listen","el","handlerBaseName","cb","addEventListener","attachEvent","capture","process","env","NODE_ENV","console","error","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAIA,aAAa,GAAG;AAClB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,MAAM,EAAE,UAASC,EAAT,EAAaC,eAAb,EAA8BC,EAA9B,EAAkC;AACxC,QAAIF,EAAE,CAACG,gBAAP,EAAyB;AACvBH,MAAAA,EAAE,CAACG,gBAAH,CAAoBF,eAApB,EAAqCC,EAArC,EAAyC,KAAzC;AACD,KAFD,MAEO,IAAIF,EAAE,CAACI,WAAP,EAAoB;AACzBJ,MAAAA,EAAE,CAACI,WAAH,CAAe,OAAOH,eAAtB,EAAuCC,EAAvC;AACD;AACF,GAdiB;;AAgBlB;AACF;AACA;AACA;AACA;AACA;AACEG,EAAAA,OAAO,EAAE,UAASL,EAAT,EAAaC,eAAb,EAA8BC,EAA9B,EAAkC;AACzC,QAAI,CAACF,EAAE,CAACG,gBAAR,EAA0B;AACxB,UAAI,iBAAiBG,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;AACzCC,QAAAA,OAAO,CAACC,KAAR,CACE,gDACA,wCADA,GAEA,0DAFA,GAGA,8CAJF;AAKD;;AACD;AACD,KATD,MASO;AACLV,MAAAA,EAAE,CAACG,gBAAH,CAAoBF,eAApB,EAAqCC,EAArC,EAAyC,IAAzC;AACD;AACF;AAnCiB,CAApB;AAsCAS,MAAM,CAACC,OAAP,GAAiBd,aAAjB","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n */\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listens to bubbled events on a DOM node.\n   *\n   * @param {Element} el DOM element to register listener on.\n   * @param {string} handlerBaseName 'click'/'mouseover'\n   * @param {Function!} cb Callback function\n   */\n  listen: function(el, handlerBaseName, cb) {\n    if (el.addEventListener) {\n      el.addEventListener(handlerBaseName, cb, false);\n    } else if (el.attachEvent) {\n      el.attachEvent('on' + handlerBaseName, cb);\n    }\n  },\n\n  /**\n   * Listens to captured events on a DOM node.\n   *\n   * @see `EventListener.listen` for params.\n   * @throws Exception if addEventListener is not supported.\n   */\n  capture: function(el, handlerBaseName, cb) {\n    if (!el.addEventListener) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        console.error(\n          'You are attempting to use addEventListener ' +\n          'in a browser that does not support it.' +\n          'This likely means that you will not receive events that ' +\n          'your application relies on (such as scroll).');\n      }\n      return;\n    } else {\n      el.addEventListener(handlerBaseName, cb, true);\n    }\n  }\n};\n\nmodule.exports = EventListener;\n"]},"metadata":{},"sourceType":"script"}