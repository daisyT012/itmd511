{"ast":null,"code":"/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\"use strict\";\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar getEventTarget = require(\"./getEventTarget\");\n\nvar merge = require(\"./merge\");\n\nvar mergeInto = require(\"./mergeInto\");\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nvar EventInterface = {\n  type: null,\n  target: getEventTarget,\n  currentTarget: null,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\n\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n  var Interface = this.constructor.Interface;\n\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n\n    var normalize = Interface[propName];\n\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      this[propName] = nativeEvent[propName];\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nmergeInto(SyntheticEvent.prototype, {\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    event.preventDefault ? event.preventDefault() : event.returnValue = false;\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n});\nSyntheticEvent.Interface = EventInterface;\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\n\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n  var prototype = Object.create(Super.prototype);\n  mergeInto(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n  Class.Interface = merge(Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);\nmodule.exports = SyntheticEvent;","map":{"version":3,"sources":["C:/Users/17735/Documents/itmd511/example-create-react-app-express/node_modules/react/lib/SyntheticEvent.js"],"names":["PooledClass","require","emptyFunction","getEventTarget","merge","mergeInto","EventInterface","type","target","currentTarget","eventPhase","bubbles","cancelable","timeStamp","event","Date","now","defaultPrevented","isTrusted","SyntheticEvent","dispatchConfig","dispatchMarker","nativeEvent","Interface","constructor","propName","hasOwnProperty","normalize","returnValue","isDefaultPrevented","thatReturnsTrue","thatReturnsFalse","isPropagationStopped","prototype","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","destructor","augmentClass","Class","Super","Object","create","addPoolingTo","threeArgumentPooler","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar emptyFunction = require(\"./emptyFunction\");\nvar getEventTarget = require(\"./getEventTarget\");\nvar merge = require(\"./merge\");\nvar mergeInto = require(\"./mergeInto\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: getEventTarget,\n  currentTarget: null,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      this[propName] = nativeEvent[propName];\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ?\n    nativeEvent.defaultPrevented :\n    nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nmergeInto(SyntheticEvent.prototype, {\n\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    event.preventDefault ? event.preventDefault() : event.returnValue = false;\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    var event = this.nativeEvent;\n    event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function(Class, Interface) {\n  var Super = this;\n\n  var prototype = Object.create(Super.prototype);\n  mergeInto(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = merge(Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n"]},"metadata":{},"sourceType":"script"}